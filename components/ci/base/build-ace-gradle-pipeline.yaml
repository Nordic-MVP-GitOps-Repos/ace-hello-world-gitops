apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-ace-gradle-pipeline
spec:
  params:
    - name: gitrepo-application-code
      type: string
      default: https://github.com/Nordic-MVP-GitOps-Repos/ace-hello-world.git
      description: git repo containing the application code
    - name: gitrepo-gitops-code
      type: string
      default: https://github.com/Nordic-MVP-GitOps-Repos/ace-hello-world-gitops.git
      description: git repo containing the gitops config for the application
    - description: name of secret with username and token to use for publishing bar file
      name: artifactreposecretname
      type: string
  tasks:
    - name: build-barfile-test-and-publish
      params:
        - name: ARTIFACT_REPO_SECRET_NAME
          value: $(params.artifactreposecretname)
        - name: GRADLE_TASK
          value: 'packageApplication buildWithUnitTests runUnitTests publish'
      runAfter:
        - git-clone-application-code
        - git-clone-gitops-code
      taskRef:
        kind: Task
        name: build-ace-gradle
      workspaces:
        - name: source
          workspace: source
        - name: cache
          workspace: gradle-cache
        - name: extra-ca
          workspace: extra-ca
    - name: git-clone-gitops-code
      params:
        - name: url
          value: $(params.gitrepo-gitops-code)
        - name: revision
          value: ''
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: 'gitops-code'
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:e29585c67da42f3800f250c9c60159453af6ee7b4fff5669e27e17f34136a1d3
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source
        - name: basic-auth
          workspace: git-credentials
    - name: git-clone-application-code
      params:
        - name: url
          value: $(params.gitrepo-application-code)
        - name: revision
          value: ''
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: 'application-code'
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:e29585c67da42f3800f250c9c60159453af6ee7b4fff5669e27e17f34136a1d3
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source
        - name: basic-auth
          workspace: git-credentials
    - name: yq-update-bar-url-in-deployment
      taskRef:
        kind: Task
        name: yq
      runAfter:
        - build-barfile-test-and-publish
      params:
        - name: SCRIPT
          value: |
            
            export DEPLOYMENT_MANIFEST=gitops-code/components/app/base/ace-helloworld-integrationserver.yaml
            export PUBLISHED_VERSION=$(tasks.build-barfile-test-and-publish.results.published-version)
            export BAR_URL=https://maven.pkg.github.com/Nordic-MVP-GitOps-Repos/ace-hello-world/com/ibm/ace/ace-hello-world/$PUBLISHED_VERSION/ace-hello-world-$PUBLISHED_VERSION.bar

            echo Updating using barURL $BAR_URL
            
            yq -i '.spec.barURL=strenv(BAR_URL)' $DEPLOYMENT_MANIFEST
            
            cat $DEPLOYMENT_MANIFEST
        - name: image
          value: >-
            docker.io/mikefarah/yq:4.27.5@sha256:2be3626ed633fbe1fc33ee9343a1256a6be53334412b2251b9a859f8c145bb53
        - name: files
          value: []
      workspaces:
        - name: source
          workspace: source
    - name: git-cli-commit-deployment-yaml
      taskRef:
        kind: ClusterTask
        name: git-cli
      runAfter: 
        - yq-update-bar-url-in-deployment
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_USER_NAME
          value: kjellmlarsson
        - name: GIT_USER_EMAIL
          value: kjell.m.larsson@se.ibm.com
        - name: GIT_SCRIPT
          value: |

            set -x

            cd gitops-config

            git status

            if [[ $(git status -uno --porcelain | wc -l) -eq 0 ]];  then 
                exit 0
            fi
            
            git add -u .
            git commit -m "Updated deployment of ace-hello-world app based on application code $(tasks.build-barfile-test-and-publish.results.published-version)"
            git push origin HEAD:main
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
      workspaces:
        - name: source
          workspace: source
        - name: basic-auth
          workspace: github-credentials
  workspaces:
    - name: source
    - name: git-credentials
      optional: true
    - name: extra-ca
      optional: true
    - name: gradle-cache
      optional: true
